#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ TradingView OpenAPI Generator
–ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º —Ä–µ–ª–∏–∑–æ–º –∏–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π.
"""

import os
import shutil
import glob


def cleanup_directories():
    """–û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã."""
    directories_to_clean = [
        'results',
        'logs', 
        'specs'
    ]
    
    for directory in directories_to_clean:
        if os.path.exists(directory):
            print(f"üßπ –û—á–∏—â–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {directory}")
            try:
                shutil.rmtree(directory)
                os.makedirs(directory, exist_ok=True)
                print(f"‚úÖ {directory} –æ—á–∏—â–µ–Ω–∞")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {directory}: {e}")


def cleanup_temp_files():
    """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã."""
    temp_patterns = [
        '*.tmp',
        '*.cache',
        '*.log',
        '__pycache__',
        '.pytest_cache',
        '.mypy_cache'
    ]
    
    for pattern in temp_patterns:
        matches = glob.glob(pattern, recursive=True)
        for match in matches:
            try:
                if os.path.isfile(match):
                    os.remove(match)
                elif os.path.isdir(match):
                    shutil.rmtree(match)
                print(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω: {match}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {match}: {e}")


def cleanup_old_specs():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏."""
    spec_patterns = [
        'specs/*.yaml',
        'specs/*.yml',
        'specs/*.json.bak'
    ]
    
    for pattern in spec_patterns:
        matches = glob.glob(pattern)
        for match in matches:
            try:
                os.remove(match)
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è: {match}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {match}: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏."""
    print("üöÄ –ù–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É –ø—Ä–æ–µ–∫—Ç–∞ TradingView OpenAPI Generator")
    print("=" * 60)
    
    # –û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    cleanup_directories()
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    cleanup_temp_files()
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
    cleanup_old_specs()
    
    print("=" * 60)
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìù –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π")


if __name__ == "__main__":
    main() 