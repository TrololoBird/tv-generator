Metadata-Version: 2.4
Name: tv-generator
Version: 1.0.54
Summary: TradingView OpenAPI Generator - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä OpenAPI 3.1.0 —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
Author-email: TradingView OpenAPI Generator Team <team@tradingview-generator.com>
License: MIT
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests==2.31.0
Requires-Dist: pydantic==2.11.2
Requires-Dist: pydantic-settings==2.2.1
Requires-Dist: typer==0.9.0
Requires-Dist: rich==13.7.0
Requires-Dist: loguru==0.7.2
Requires-Dist: httpx==0.27.0
Requires-Dist: toml==0.10.2
Requires-Dist: pyyaml==6.0.1
Provides-Extra: dev
Requires-Dist: pytest==8.0.0; extra == "dev"
Requires-Dist: pytest-cov==4.1.0; extra == "dev"
Requires-Dist: pytest-asyncio==0.23.5; extra == "dev"
Requires-Dist: black==24.2.0; extra == "dev"
Requires-Dist: flake8==7.0.0; extra == "dev"
Requires-Dist: mypy==1.8.0; extra == "dev"
Requires-Dist: coverage==7.4.1; extra == "dev"
Requires-Dist: bandit==1.7.7; extra == "dev"
Requires-Dist: safety==2.3.5; extra == "dev"
Requires-Dist: requests-mock==1.11.0; extra == "dev"
Requires-Dist: types-requests==2.31.0.20240311; extra == "dev"
Requires-Dist: types-toml==0.10.8.7; extra == "dev"
Dynamic: license-file

# TradingView OpenAPI Generator

[![Python 3.10+](https://img.shields.io/badge/python-3.10+-blue.svg)](https://www.python.org/downloads/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä OpenAPI 3.1.0 —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π –¥–ª—è TradingView Scanner API.

## üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- **–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞** - —á–∏—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–¥–∞ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
- **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã** - –±—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ `httpx`
- **Rate limiting** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
- **Retry –ª–æ–≥–∏–∫–∞** - —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å–±–æ—è–º —Å–µ—Ç–∏
- **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π CLI** - –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å `typer` –∏ `rich`
- **–ü–æ–ª–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ** - –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ —Å `loguru`
- **–¢–∏–ø–∏–∑–∞—Ü–∏—è** - –ø–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ type hints
- **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ** - –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ —Å `pytest`
- **–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è** - –µ–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π

## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

### –ò–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞

```bash
git clone https://github.com/your-username/tv-generator.git
cd tv-generator
pip install -e .
```

### –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
pip install -e ".[dev]"
```

## üõ†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

```bash
# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
python main.py

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
python scripts/maintenance/generate_specs.py

# CLI –∫–æ–º–∞–Ω–¥—ã
python -m tv_generator.cli info
python -m tv_generator.cli validate
python -m tv_generator.cli fetch-data
```

### CLI –∫–æ–º–∞–Ω–¥—ã (—á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å)

```bash
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
python -m tv_generator.cli info

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
python -m tv_generator.cli validate

# –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å–æ –≤—Å–µ—Ö —Ä—ã–Ω–∫–æ–≤
python -m tv_generator.cli fetch-data

# –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞
python -m tv_generator.cli fetch-data --market us_stocks

# –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
python -m tv_generator.cli fetch-data --verbose

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
python -m tv_generator.cli test-specs

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
python -m tv_generator.cli generate

# –°–ø—Ä–∞–≤–∫–∞
python -m tv_generator.cli --help
```

### –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

```python
import asyncio
from tv_generator import Pipeline, TradingViewAPI

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞
async def main():
    pipeline = Pipeline()
    await pipeline.run()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
async def health_check():
    api = TradingViewAPI()
    async with api:
        health = await api.health_check()
        print(health)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
from tv_generator.core import generate_all_specifications
generate_all_specifications()

asyncio.run(main())
```

## ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ `src/tv_generator/config.py`:

```python
from tv_generator.config import settings

# API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
print(settings.tradingview_base_url)  # https://scanner.tradingview.com
print(settings.request_timeout)       # 30
print(settings.max_retries)          # 3
print(settings.requests_per_second)  # 10

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä—ã–Ω–∫–∏
for market_name, config in settings.markets.items():
    print(f"{market_name}: {config['description']}")
```

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –¥–ª—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:

```env
TRADINGVIEW_BASE_URL=https://scanner.tradingview.com
REQUEST_TIMEOUT=30
MAX_RETRIES=3
REQUESTS_PER_SECOND=10
LOG_LEVEL=INFO
```

## üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞

```
tv-generator/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îî‚îÄ‚îÄ tv_generator/           # –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞–∫–µ—Ç
‚îÇ       ‚îú‚îÄ‚îÄ __init__.py         # –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
‚îÇ       ‚îú‚îÄ‚îÄ config.py           # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ pydantic-settings
‚îÇ       ‚îú‚îÄ‚îÄ api.py              # API –∫–ª–∏–µ–Ω—Ç —Å httpx
‚îÇ       ‚îú‚îÄ‚îÄ core.py             # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞
‚îÇ       ‚îú‚îÄ‚îÄ cli.py              # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π CLI
‚îÇ       ‚îî‚îÄ‚îÄ simple_cli.py       # –ü—Ä–æ—Å—Ç–æ–π CLI —Å typer
‚îú‚îÄ‚îÄ scripts/
‚îÇ   ‚îú‚îÄ‚îÄ maintenance/            # –°–∫—Ä–∏–ø—Ç—ã –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ generate_specs.py   # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ cleanup.py          # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ optimize_structure.py # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
‚îÇ   ‚îî‚îÄ‚îÄ utils/                  # –£—Ç–∏–ª–∏—Ç—ã
‚îÇ       ‚îú‚îÄ‚îÄ openapi_updater.py  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ OpenAPI
‚îÇ       ‚îî‚îÄ‚îÄ validation_and_ci.py # –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ CI
‚îú‚îÄ‚îÄ docs/                       # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ api/                    # API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ specs/                  # OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
‚îÇ   ‚îî‚îÄ‚îÄ user_guide/             # –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚îú‚îÄ‚îÄ tests/                      # –¢–µ—Å—Ç—ã
‚îÇ   ‚îú‚îÄ‚îÄ conftest.py             # –§–∏–∫—Å—Ç—É—Ä—ã pytest
‚îÇ   ‚îú‚îÄ‚îÄ test_config.py          # –¢–µ—Å—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
‚îÇ   ‚îú‚îÄ‚îÄ test_api.py             # –¢–µ—Å—Ç—ã API
‚îÇ   ‚îú‚îÄ‚îÄ test_core.py            # –¢–µ—Å—Ç—ã –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
‚îÇ   ‚îî‚îÄ‚îÄ test_cli.py             # –¢–µ—Å—Ç—ã CLI
‚îú‚îÄ‚îÄ data/                       # –î–∞–Ω–Ω—ã–µ
‚îÇ   ‚îú‚îÄ‚îÄ raw/                    # –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
‚îÇ   ‚îî‚îÄ‚îÄ processed/              # –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
‚îú‚îÄ‚îÄ reports/                    # –û—Ç—á–µ—Ç—ã –∏ –ª–æ–≥–∏
‚îú‚îÄ‚îÄ backups/                    # –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
‚îú‚îÄ‚îÄ main.py                     # –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
‚îî‚îÄ‚îÄ generate_openapi.py         # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä OpenAPI
```

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤

```bash
# –í—Å–µ —Ç–µ—Å—Ç—ã
pytest

# –° –ø–æ–∫—Ä—ã—Ç–∏–µ–º
pytest --cov=src/tv_generator --cov-report=html

# –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ—Å—Ç
pytest tests/test_api.py::test_get_metainfo

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
pytest --asyncio-mode=auto
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞

```bash
# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
black .

# –õ–∏–Ω—Ç–∏–Ω–≥
flake8 .

# –¢–∏–ø–∏–∑–∞—Ü–∏—è
mypy src/tv_generator/

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
bandit -r src/tv_generator/
safety check
```

## üìä –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä—ã–Ω–∫–∏

| –†—ã–Ω–æ–∫ | –û–ø–∏—Å–∞–Ω–∏–µ | –≠–Ω–¥–ø–æ–∏–Ω—Ç |
|-------|----------|----------|
| `us_stocks` | US Stocks | america |
| `us_etfs` | US ETFs | america |
| `america` | America Markets | america |
| `forex` | Forex | forex |
| `crypto` | Cryptocurrency | crypto |
| `crypto_dex` | Crypto DEX | crypto_dex |
| `coin` | Cryptocurrency Coins | coin |
| `futures` | Futures | futures |
| `cfd` | CFDs | cfd |
| `bonds` | Bonds | bond |

## üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
git clone https://github.com/your-username/tv-generator.git
cd tv-generator

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
python -m venv .venv
source .venv/bin/activate  # Linux/Mac
# –∏–ª–∏
.venv\Scripts\activate     # Windows

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
pip install -e ".[dev]"

# Pre-commit hooks
pre-commit install
```

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

1. **Fork** —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
2. –°–æ–∑–¥–∞–π—Ç–µ **feature branch** (`git checkout -b feature/amazing-feature`)
3. **Commit** –∏–∑–º–µ–Ω–µ–Ω–∏—è (`git commit -m 'Add amazing feature'`)
4. **Push** –≤ branch (`git push origin feature/amazing-feature`)
5. –û—Ç–∫—Ä–æ–π—Ç–µ **Pull Request**

### –ö–æ–º–º–∏—Ç—ã

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ [Conventional Commits](https://www.conventionalcommits.org/):

```
feat: add new market support
fix: resolve API timeout issue
docs: update README with new examples
test: add integration tests for crypto markets
refactor: improve error handling in API client
```

## üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

–õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ `reports/`:

- `reports/pipeline.log` - –ª–æ–≥–∏ –ø–∞–π–ø–ª–∞–π–Ω–∞
- `reports/tvgen.log` - –ª–æ–≥–∏ CLI

–£—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:
- `DEBUG` - –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
- `INFO` - –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
- `WARNING` - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
- `ERROR` - –æ—à–∏–±–∫–∏

## üö® –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

–ü—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—é –∏—Å–∫–ª—é—á–µ–Ω–∏–π:

```python
from tv_generator.api import TradingViewAPIError
from tv_generator.core import PipelineError

try:
    # API –æ–ø–µ—Ä–∞—Ü–∏–∏
    pass
except TradingViewAPIError as e:
    # –û—à–∏–±–∫–∏ API (—Å–µ—Ç–µ–≤—ã–µ, HTTP)
    logger.error(f"API error: {e}")
except PipelineError as e:
    # –û—à–∏–±–∫–∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
    logger.error(f"Pipeline error: {e}")
```

## üìà –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

- **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã** - –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
- **Rate limiting** - 10 –∑–∞–ø—Ä–æ—Å–æ–≤/—Å–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
- **Batch processing** - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª–µ–π –±–∞—Ç—á–∞–º–∏ –ø–æ 50
- **Retry —Å exponential backoff** - —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ —Å–±–æ—è–º

## üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è

### –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π

```bash
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π
python scripts/maintenance/generate_specs.py

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
python scripts/maintenance/cleanup.py

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
python scripts/maintenance/optimize_structure.py
```

### CI/CD –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CI/CD —Å–∏—Å—Ç–µ–º–∞–º–∏:

```yaml
# GitHub Actions example
- name: Generate OpenAPI specs
  run: python scripts/maintenance/generate_specs.py

- name: Run tests
  run: pytest

- name: Check code quality
  run: |
    black --check .
    flake8 .
    mypy src/tv_generator/
```

## ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç

–ú—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å:

- [Code of Conduct](CODE_OF_CONDUCT.md)
- [Contributing Guidelines](CONTRIBUTING.md)
- [Issue Templates](.github/ISSUE_TEMPLATE/)

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ MIT License - —Å–º. —Ñ–∞–π–ª [LICENSE](LICENSE) –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.

## üôè –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏

- [TradingView](https://www.tradingview.com/) –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ API
- [httpx](https://www.python-httpx.org/) –∑–∞ –æ—Ç–ª–∏—á–Ω—É—é HTTP –±–∏–±–ª–∏–æ—Ç–µ–∫—É
- [typer](https://typer.tiangolo.com/) –∑–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π CLI —Ñ—Ä–µ–π–º–≤–æ—Ä–∫
- [rich](https://rich.readthedocs.io/) –∑–∞ –∫—Ä–∞—Å–∏–≤—ã–µ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

- üìß Email: support@tradingview-generator.com
- üêõ Issues: [GitHub Issues](https://github.com/your-username/tv-generator/issues)
- üí¨ Discussions: [GitHub Discussions](https://github.com/your-username/tv-generator/discussions)

---

**TradingView OpenAPI Generator** - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É —Å TradingView API! üöÄ
