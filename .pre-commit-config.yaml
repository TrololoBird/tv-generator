repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: debug-statements

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=120]
        files: ^(src/|tests/|scripts/)

  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        args: [--max-line-length=120, --extend-ignore=E203,W503,E501]
        files: ^(src/|tests/|scripts/)

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.1
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-toml]
        args: [--ignore-missing-imports, --disallow-untyped-defs]
        files: ^src/tv_generator/

  - repo: https://github.com/pycqa/bandit
    rev: 1.8.5
    hooks:
      - id: bandit
        args: [-r, src/tv_generator, -f, json, -o, bandit-report.json]
        exclude: ^tests/

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        args: [--py310-plus]
        files: ^(src/|tests/|scripts/)

  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.10.1
    hooks:
      - id: isort
        args: [--profile=black, --line-length=120]
        files: ^(src/|tests/|scripts/)

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [--cov=src/tv_generator, --cov-report=term-missing, -v]

      - id: cli-test
        name: CLI Test
        entry: tvgen
        language: system
        pass_filenames: false
        always_run: true
        args: [info]

      - id: auto-cleanup
        name: Auto Cleanup
        entry: python
        language: system
        pass_filenames: false
        always_run: true
        args: [-c, "import os; [os.remove(f) for f in ['__pycache__', '.pytest_cache', '.mypy_cache'] if os.path.exists(f)]"]
