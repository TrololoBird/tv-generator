import json
import requests
from time import sleep

API_URL = "https://scanner.tradingview.com/crypto/scan"
HEADERS = {"Content-Type": "application/json"}
TICKER = "BINANCE:BTCUSDT"
BATCH_SIZE = 10
DELAY = 0.5

# === –ó–∞–≥—Ä—É–∑–∫–∞: –ø–æ–ª–µ-—Å–ø–∏—Å–æ–∫ –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π ===
with open("field_categories.json", "r", encoding="utf-8") as f:
    raw_categories = json.load(f)

# === –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π ===
fields_to_check = []
for category, items in raw_categories.items():
    fields_to_check.extend(items)

# –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
fields_to_check = sorted(set(fields_to_check))

# === –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ===
supported = {}
nulls = []
unsupported = []

print(f"üß™ –í—Å–µ–≥–æ –ø–æ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {len(fields_to_check)}")

# === –ü–∞–∫–µ—Ç–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ ===
for i in range(0, len(fields_to_check), BATCH_SIZE):
    batch = fields_to_check[i:i + BATCH_SIZE]

    payload = {
        "symbols": {"tickers": [TICKER]},
        "columns": batch
    }

    try:
        res = requests.post(API_URL, headers=HEADERS, json=payload)
        data = res.json()

        if "data" in data and data["data"]:
            values = data["data"][0]["d"]
            for field, value in zip(batch, values):
                if value is None:
                    print(f"‚ö†Ô∏è {field}: null")
                    nulls.append(field)
                else:
                    print(f"‚úÖ {field}: {value}")
                    supported[field] = value
        elif "error" in data:
            print(f"‚ùå –û—à–∏–±–∫–∞: {data['error']}")
            unsupported.extend(batch)
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞")
            unsupported.extend(batch)

    except Exception as e:
        print(f"üî• –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        unsupported.extend(batch)

    sleep(DELAY)

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º ===
with open("supported.json", "w", encoding="utf-8") as f:
    json.dump(supported, f, indent=2)

with open("nulls.json", "w", encoding="utf-8") as f:
    json.dump(nulls, f, indent=2)

with open("unsupported.json", "w", encoding="utf-8") as f:
    json.dump(unsupported, f, indent=2)

print("\n‚úÖ –ì–æ—Ç–æ–≤–æ.")
print(f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: {len(supported)}")
print(f"Null: {len(nulls)}")
print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã: {len(unsupported)}")
