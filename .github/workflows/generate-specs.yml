---
name: generate-specs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
          pip install black
      - name: Run codex actions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python - <<'PY'
          import subprocess
          from codex_actions import (
              generate_openapi_spec,
              validate_spec,
              run_tests,
              format_code,
              bump_version,
              create_pull_request,
          )

          generate_openapi_spec()
          validate_spec()
          run_tests()
          format_code()
          bump_version()

          res = subprocess.run(
              ["git", "diff", "--quiet", "HEAD", "--", "specs/*.yaml"]
          )
          if res.returncode == 0:
              print("No spec changes detected")
          else:
              subprocess.run([
                  "git",
                  "config",
                  "user.email",
                  "github-actions[bot]@users.noreply.github.com",
              ], check=True)
              subprocess.run([
                  "git",
                  "config",
                  "user.name",
                  "github-actions[bot]",
              ], check=True)
              branch = "spec-update-${{ github.run_number }}"
              subprocess.run(["git", "checkout", "-b", branch], check=True)
              subprocess.run(["git", "add", "specs/*.yaml"], check=True)
              subprocess.run([
                  "git",
                  "commit",
                  "-m",
                  "chore: update specs",
              ], check=True)
              subprocess.run(["git", "push", "origin", branch], check=True)
              create_pull_request(
                  title="Update OpenAPI specs",
                  body="Спецификация обновлена автоматически на основе новых данных с TradingView /metainfo",
              )
          PY

