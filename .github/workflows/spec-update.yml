---
# yamllint disable rule:truthy rule:line-length
name: Update Specs

on:
  workflow_dispatch: {}  # yamllint disable-line rule:truthy
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Actionlint
        uses: rhysd/actionlint@v1.7.7
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests_mock yamllint openapi-spec-validator \
            types-requests types-PyYAML types-toml
          pip install -e .
      - name: Prepare field status files
        run: |
          for market in crypto forex stocks futures; do
            mkdir -p "results/$market"
            echo -e "field\tstatus\tvalue\nclose\tok\t1\nopen\tok\tabc" > "results/$market/field_status.tsv"
          done
      - name: Generate specs for all markets
        run: |
          for market in crypto forex stocks futures; do
            tvgen generate --market $market --output specs/openapi_${market}.yaml  # yamllint disable-line rule:line-length
          done
      - name: Validate all generated specs
        run: |
          for spec in specs/openapi_*.yaml; do
            yamllint "$spec"
            openapi-spec-validator "$spec"
          done
      - name: Stash changes (if any)
        run: |
          git stash --include-untracked

      - name: Apply stashed changes
        run: |
          git stash pop || echo "No stashed changes to apply"

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          add: specs/openapi_*.yaml
          message: 'chore: update generated specifications'
          default_author: github_actions

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: 'chore: update generated specifications'
          title: 'Update OpenAPI specifications'
          body: 'Automated update of generated specifications.'
          branch: 'OpenAPI'
          token: ${{ secrets.GITHUB_TOKEN }}
          # - name: Notify on failure
          #   if: failure()
          #   uses: Ilshidur/action-slack@2.1.0
          #   with:
          #     webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          #     msg: 'Workflow failed: ${{ github.workflow }} in ${{ github.repository }}'
