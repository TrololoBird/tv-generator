name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 1'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy pytest pytest-cov openapi-spec-validator requests_mock \
            types-requests types-PyYAML types-toml -r requirements.txt
          pip install -e .
      - name: Format
        run: black --check .
      - name: Lint
        run: flake8 .
      - name: Type check
        run: mypy --strict src/
      - name: Test with coverage
        run: pytest --cov=src --cov-report=xml --cov-fail-under=95 -q
      - name: Upload coverage to Codecov
        if: ${{ env.CODECOV_TOKEN != '' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          pip install codecov
          codecov -t $CODECOV_TOKEN
      - name: Generate specs for all markets
        run: |
          for market in crypto forex stocks futures; do
            mkdir -p results/$market
            echo -e "field\tstatus\tvalue\nclose\tok\t1\nopen\tok\tabc" > results/$market/field_status.tsv
            tvgen generate --market $market --output specs/openapi_${market}.yaml
          done

      - name: Validate all generated specs
        run: |
          for spec in specs/openapi_*.yaml; do
            openapi-spec-validator "$spec"
          done
      - name: Check spec sizes
        run: |
          for spec in specs/*.yaml; do
            size=$(wc -c < "$spec")
            if [ "$size" -ge 1048576 ]; then
              echo "${spec} is ${size} bytes, exceeds 1 MB" >&2
              exit 1
            fi
          done
